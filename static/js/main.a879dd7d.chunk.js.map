{"version":3,"sources":["img/RakerLeague.jpg","img/Bundesliga.png","img/Eredivisie.png","img/LaLiga.png","img/Ligue1.png","img/PremierLeague.png","img/SerieA.png","components/Header.js","components/Button.js","components/Row.js","components/TableBody.js","components/LeagueInfo.js","robots.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Header","props","children","Button","onClick","handleClick","data-leagueid","leagueId","text","Row","className","position","src","crestURI","alt","teamName","playedGames","wins","draws","losses","points","TableBody","title","LeagueInfo","imgSrc","leagueCaption","RakerLeague","Bundesliga","Eredivisie","LaLiga","Ligue1","PremierLeague","SerieA","robots","id","name","username","email","App","state","leagueName","rows","leagues","buttons","handleLeagueClick","bind","e","newId","target","getAttribute","this","setState","fetchSiput","fetchData","map","user","index","push","key","fetch","headers","then","response","json","responseJson","standings","table","item","won","draw","lost","team","crestUrl","competition","catch","error","console","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a879dd7d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RakerLeague.b6c447a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bundesliga.3e055fb4.png\";","module.exports = __webpack_public_path__ + \"static/media/Eredivisie.07239886.png\";","module.exports = __webpack_public_path__ + \"static/media/LaLiga.2be24290.png\";","module.exports = __webpack_public_path__ + \"static/media/Ligue1.4b2af31f.png\";","module.exports = __webpack_public_path__ + \"static/media/PremierLeague.2ea36f1c.png\";","module.exports = __webpack_public_path__ + \"static/media/SerieA.3ee74dc2.png\";","import React from 'react';\n\nconst Header = (props) => {\n    return (\n        <header>\n            {props.children}\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\n\nconst Button = (props) => {\n    return (\n        <button onClick={props.handleClick} data-leagueid={props.leagueId}>\n            {props.text}\n        </button>\n    );\n};\n\nexport default Button;","import React from \"react\";\n\nconst Row = props => {\n  return (\n    <tr>\n      <td className=\"team-position\">{props.position}</td>\n      <td className=\"team-name\">\n        <div className=\"crest\">\n          <img src={props.crestURI} alt=\"\" />\n        </div>\n        <span>{props.teamName}</span>\n      </td>\n      <td>{props.playedGames}</td>\n      <td>{props.wins}</td>\n      <td>{props.draws}</td>\n      <td>{props.losses}</td>\n      <td className=\"team-points\">{props.points}</td>\n    </tr>\n  );\n};\n\nexport default Row;\n\n/*const Row = props => {\n    return (\n      <tr>\n        <td className=\"team-position\">{props.position}</td>\n        <td className=\"team-name\">\n          <div className=\"crest\">\n            <img src={props.crestURI} alt=\"\" />\n          </div>\n          <span>{props.teamName}</span>\n        </td>\n        <td>{props.playedGames}</td>\n        <td>{props.wins}</td>\n        <td>{props.draws}</td>\n        <td>{props.losses}</td>\n        <td>{props.goalsFor}</td>\n        <td>{props.goalsAgainst}</td>\n        <td>{props.goalDifference}</td>\n        <td className=\"team-points\">{props.points}</td>\n      </tr>\n    );\n  };*/\n","import React from \"react\";\n\nconst TableBody = props => {\n  return (\n    <table className=\"standings\">\n      <tbody>\n        <tr className=\"table-head\">\n          <td className=\"team-position\">#</td>\n          <td className=\"team-name\">Team</td>\n          <td title=\"Matches played\">MatchPlayed</td>\n          <td title=\"Wins\">Wins</td>\n          <td title=\"Draws\">Draws</td>\n          <td title=\"Losses\">Losses</td>\n          <td title=\"Team points\">Points</td>\n        </tr>\n        {props.children}\n      </tbody>\n    </table>\n  );\n};\n\nexport default TableBody;\n\n/*<tr className=\"table-head\">\n<td className=\"team-position\">#</td>\n<td className=\"team-name\">Team</td>\n<td title=\"Matches played\">MatchPlayed</td>\n<td title=\"Wins\">W</td>\n<td title=\"Draws\">D</td>\n<td title=\"Losses\">L</td>\n<td title=\"Goals for\">GF</td>\n<td title=\"Goals against\">GA</td>\n<td title=\"Goals difference\">GD</td>\n<td title=\"Team points\">Pts</td>\n</tr> */\n","import React from \"react\";\nimport Bundesliga from \"../img/Bundesliga.png\";\nimport Eredivisie from \"../img/Eredivisie.png\";\nimport LaLiga from \"../img/LaLiga.png\";\nimport Ligue1 from \"../img/Ligue1.png\";\nimport PremierLeague from \"../img/PremierLeague.png\";\nimport SerieA from \"../img/SerieA.png\";\nimport RakerLeague from \"../img/RakerLeague.jpg\";\n\nconst LeagueInfo = props => {\n  let imgSrc;\n  switch (props.leagueCaption) {\n    case \"RakerLeague\":\n      imgSrc = RakerLeague;\n      break;\n\n    case \"Bundesliga\":\n      imgSrc = Bundesliga;\n      break;\n\n    case \"Eredivisie\":\n      imgSrc = Eredivisie;\n      break;\n\n    case \"Primera Division\":\n      imgSrc = LaLiga;\n      break;\n\n    case \"Ligue 1\":\n      imgSrc = Ligue1;\n      break;\n\n    case \"Premier League\":\n      imgSrc = PremierLeague;\n      break;\n\n    case \"Serie A\":\n      imgSrc = SerieA;\n      break;\n\n    default:\n      imgSrc = RakerLeague;\n      break;\n  }\n\n  return (\n    <div className=\"league-info\">\n      <img src={imgSrc} alt=\"League Logo\" />\n    </div>\n  );\n};\n\nexport default LeagueInfo;\n","/*key={index}\nposition={robots[index].name}\ncrestURI={robots[index].name}\nteamName={robots[index].name}\nplayedGames={robots[index].name}\nwins={robots[index].name}\ndraws={robots[index].name}\nlosses={robots[index].name}\ngoalsFor={robots[index].name}\ngoalsAgainst={robots[index].name}\ngoalDifference={robots[index].name}\npoints={robots[index].name}*/\n\nexport const robots = [\n  {\n    id: 1,\n    position: 1,\n    teamName: \"Raker A\",\n    playedGames: 3,\n    wins: 3,\n    draws: 0,\n    losses: 0,\n    points: 99\n  },\n  {\n    id: 2,\n    position: 2,\n    teamName: \"Raker B\",\n    playedGames: 3,\n    wins: 3,\n    draws: 0,\n    losses: 0,\n    points: 90\n  },\n  {\n    id: 3,\n    position: 3,\n    teamName: \"Raker C\",\n    playedGames: 3,\n    wins: 3,\n    draws: 0,\n    losses: 0,\n    points: 80\n  },\n  {\n    id: 4,\n    position: 4,\n    teamName: \"Raker D\",\n    playedGames: 3,\n    wins: 2,\n    draws: 1,\n    losses: 0,\n    points: 70\n  },\n  {\n    id: 5,\n    position: 5,\n    teamName: \"Raker E\",\n    playedGames: 3,\n    wins: 2,\n    draws: 0,\n    losses: 1,\n    points: 60\n  },\n  {\n    id: 6,\n    name: \"Mrs. Dennis Schulist\",\n    username: \"Leopoldo_Corkery\",\n    email: \"Karley_Dach@jasper.info\"\n  },\n  {\n    id: 7,\n    name: \"Kurtis Weissnat\",\n    username: \"Elwyn.Skiles\",\n    email: \"Telly.Hoeger@billy.biz\"\n  },\n  {\n    id: 8,\n    name: \"Nicholas Runolfsdottir V\",\n    username: \"Maxime_Nienow\",\n    email: \"Sherwood@rosamond.me\"\n  },\n  {\n    id: 9,\n    name: \"Glenna Reichert\",\n    username: \"Delphine\",\n    email: \"Chaim_McDermott@dana.io\"\n  },\n  {\n    id: 10,\n    name: \"Shaiful Shafian\",\n    username: \"shy\",\n    email: \"starwars@gmail.com\"\n  }\n];\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport Row from \"../components/Row\";\nimport TableBody from \"../components/TableBody\";\nimport LeagueInfo from \"../components/LeagueInfo\";\nimport { robots } from \"../robots\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      leagueName: \"Raker Liga\",\n      rows: [],\n      leagueId: \"RL\",\n      leagues: {\n        RakerLeague: \"RL\",\n        \"La Liga\": \"PD\",\n        \"Premier League\": \"PL\",\n        Eredivisie: \"DED\",\n        \"Ligue 1\": \"FL1\",\n        Bundesliga: \"BL1\",\n        \"Serie A\": \"SA\"\n      },\n      buttons: []\n    };\n    this.handleLeagueClick = this.handleLeagueClick.bind(this);\n  }\n\n  handleLeagueClick(e) {\n    const newId = e.target.getAttribute(\"data-leagueid\");\n    this.setState(\n      {\n        leagueId: newId\n      },\n      () => {\n        if (this.state.leagueId === \"RL\") {\n          this.fetchSiput();\n        } else {\n          this.fetchData();\n        }\n      }\n    );\n  }\n\n  fetchSiput() {\n    const rows = [];\n    robots.map((user, index) => {\n      return rows.push(\n        <Row\n          key={index}\n          position={robots[index].position}\n          //crestURI={}\n          teamName={robots[index].teamName}\n          playedGames={robots[index].playedGames}\n          wins={robots[index].wins}\n          draws={robots[index].draws}\n          losses={robots[index].losses}\n          //goalsFor={robots[index].name}\n          //goalsAgainst={robots[index].name}\n          //goalDifference={robots[index].name}\n          points={robots[index].points}\n        />\n      );\n    });\n    this.setState({\n      leagueName: \"Raker Liga\",\n      rows: rows\n    });\n  }\n\n  fetchData() {\n    const Token = \"b7d52e61c66f4a0194be725042ad4359\",\n      leagueId = this.state.leagueId,\n      URL =\n        \"https://api.football-data.org/v2/competitions/\" +\n        leagueId +\n        \"/standings\";\n\n    fetch(URL, { headers: { \"X-Auth-Token\": Token } })\n      .then(response => response.json())\n      .then(responseJson => {\n        const rows = [];\n        responseJson.standings[0].table.map((item, index) => {\n          const {\n            position,\n            playedGames,\n            won,\n            draw,\n            lost,\n            //goalsFor,\n            //goalsAgainst,\n            //goalDifference,\n            points\n          } = item;\n          const { crestUrl, name } = item.team;\n\n          return rows.push(\n            <Row\n              key={index}\n              position={position}\n              crestURI={crestUrl}\n              teamName={name}\n              playedGames={playedGames}\n              wins={won}\n              draws={draw}\n              losses={lost}\n              //goalsFor={goalsFor}\n              //goalsAgainst={goalsAgainst}\n              //goalDifference={goalDifference}\n              points={points}\n            />\n          );\n        });\n        this.setState({\n          leagueName: responseJson.competition.name,\n          rows: rows\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  componentDidMount() {\n    // this.fetchData();\n    // shall be OK to call fetchSiput since initial is Raker League!\n    this.fetchSiput();\n    for (let key in this.state.leagues) {\n      this.state.buttons.push(\n        <Button\n          handleClick={this.handleLeagueClick}\n          key={this.state.leagues[key]}\n          leagueId={this.state.leagues[key]}\n          text={key}\n        />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header>{this.state.buttons}</Header>\n        <div className=\"container\">\n          <LeagueInfo leagueCaption={this.state.leagueName} />\n          <TableBody>{this.state.rows}</TableBody>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}